{"remainingRequest":"/Users/quickshell/mit-edu/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/quickshell/mit-edu/src/views/Main.vue?vue&type=style&index=0&id=f0f4f9c6&scoped=true&lang=css&","dependencies":[{"path":"/Users/quickshell/mit-edu/src/views/Main.vue","mtime":1622627603060},{"path":"/Users/quickshell/mit-edu/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/quickshell/mit-edu/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/quickshell/mit-edu/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/quickshell/mit-edu/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/quickshell/mit-edu/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgojYmxvY2tseTEgewogIHBvc2l0aW9uOiByZWxhdGl2ZTsKICBsZWZ0OiAwOwogIHRvcDogMDsKICB3aWR0aDogMTAwJTsKICBoZWlnaHQ6IDEwMCU7CiAgei1pbmRleDogMDsKfQo="},{"version":3,"sources":["Main.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Main.vue","sourceRoot":"src/views","sourcesContent":["<template>\n   <v-row no-gutters class=\"fill-height\">\n    <v-col cols=\"8\">\n    <BlocklyComponent id=\"blockly1\" :options=\"options\" ref=\"block\"/>\n    </v-col>\n    <v-col cols=\"4\">\n      <Statement ref=\"state\"/>\n    </v-col>\n    </v-row>\n</template>\n\n<script>\nimport * as Blockly from 'blockly/core';\nimport BlocklyComponent from '../components/BlocklyComponent.vue'\nimport Statement from './Statement.vue'\nimport '../blocks/modulo';\nimport '../blocks/output';\nimport '../blocks/input';\nimport '../prompt';\n\n///import BlocklyJS from 'blockly/javascript';\n\nexport default {\n  name: 'Main',\n  components: {\n    BlocklyComponent,\n    Statement,\n  },\n  refs: ['state', 'block'],\n  methods: {\n    changeId: function(id) {\n      let workspace = Blockly.getMainWorkspace();\n      var l1 = JSON.parse(this.storage.getItem('workspaces'));\n      l1[this.id] = JSON.stringify(Blockly.Xml.workspaceToDom(workspace));\n      this.storage.setItem('workspaces', JSON.stringify(l1));\n      workspace.clear();\n      if (JSON.parse(l1[id]) != null) {\n        console.log(JSON.parse(l1[id]));\n        Blockly.Xml.domToWorkspace(JSON.parse(l1[id]), workspace);\n      }\n      this.id = id;\n      this.$refs.state.id = id;\n      this.$refs.state.update(id);\n    },\n    save: function() {\n      let workspace = Blockly.getMainWorkspace();\n      var l1 = JSON.parse(this.storage.getItem('workspaces'));\n      l1[this.id] = JSON.stringify(Blockly.Xml.workspaceToDom(workspace));\n      this.storage.setItem('workspaces', JSON.stringify(l1));\n    },\n  },\n  created() {\n    let workspace = Blockly.getMainWorkspace();\n    var l1 = JSON.parse(this.storage.getItem('workspaces'));\n    console.log(this.id);\n    if (JSON.parse(l1[this.id]) != null) {\n      console.log(JSON.parse(l1[this.id]));\n      Blockly.Xml.domToWorkspace(JSON.parse(l1[this.id]), workspace);\n    }\n    this.timer = setInterval(this.save, 5000);\n  },\n  data(){\n    return {\n      id: 0,\n      timer: '',\n      storage: localStorage,\n      options: {\n        media: 'media/',\n        grid:\n          {\n            spacing: 25,\n            length: 3,\n            colour: '#ccc',\n            snap: true\n          },\n        toolbox:\n        `<xml>\n        <category name=\"논리\" colour=\"%{BKY_LOGIC_HUE}\">\n      <category name=\"조건문\">\n        <block type=\"controls_if\"></block>\n        <block type=\"controls_if\">\n          <mutation else=\"1\"></mutation>\n        </block>\n        <block type=\"controls_if\">\n          <mutation elseif=\"1\" else=\"1\"></mutation>\n        </block>\n      </category>\n      <category name=\"부울구문\" colour=\"%{BKY_LOGIC_HUE}\">\n        <block type=\"logic_compare\"></block>\n        <block type=\"logic_operation\"></block>\n        <block type=\"logic_negate\"></block>\n        <block type=\"logic_boolean\"></block>\n        <block type=\"logic_null\"></block>\n        <block type=\"logic_ternary\"></block>\n      </category>\n    </category>\n    <category name=\"반복\" colour=\"%{BKY_LOOPS_HUE}\">\n      <block type=\"controls_repeat_ext\">\n        <value name=\"TIMES\">\n          <block type=\"math_number\">\n            <field name=\"NUM\">10</field>\n          </block>\n        </value>\n      </block>\n      <block type=\"controls_whileUntil\"></block>\n      <block type=\"controls_for\">\n        <field name=\"VAR\">i</field>\n        <value name=\"FROM\">\n          <block type=\"math_number\">\n            <field name=\"NUM\">1</field>\n          </block>\n        </value>\n        <value name=\"TO\">\n          <block type=\"math_number\">\n            <field name=\"NUM\">10</field>\n          </block>\n        </value>\n        <value name=\"BY\">\n          <block type=\"math_number\">\n            <field name=\"NUM\">1</field>\n          </block>\n        </value>\n      </block>\n      <block type=\"controls_forEach\"></block>\n      <block type=\"controls_flow_statements\"></block>\n    </category>\n    <category name=\"수학\" colour=\"%{BKY_MATH_HUE}\">\n      <block type=\"math_number\">\n        <field name=\"NUM\">123</field>\n      </block>\n      <block type=\"math_arithmetic\"></block>\n      <block type=\"math_single\"></block>\n      <block type=\"math_trig\"></block>\n      <block type=\"math_constant\"></block>\n      <block type=\"math_number_property\"></block>\n      <block type=\"math_round\"></block>\n      <block type=\"math_on_list\"></block>\n      <block type=\"math_modulo\"></block>\n      <block type=\"math_constrain\">\n        <value name=\"LOW\">\n          <block type=\"math_number\">\n            <field name=\"NUM\">1</field>\n          </block>\n        </value>\n        <value name=\"HIGH\">\n          <block type=\"math_number\">\n            <field name=\"NUM\">100</field>\n          </block>\n        </value>\n      </block>\n      <block type=\"math_random_int\">\n        <value name=\"FROM\">\n          <block type=\"math_number\">\n            <field name=\"NUM\">1</field>\n          </block>\n        </value>\n        <value name=\"TO\">\n          <block type=\"math_number\">\n            <field name=\"NUM\">100</field>\n          </block>\n        </value>\n      </block>\n      <block type=\"math_random_float\"></block>\n      <block type=\"math_atan2\"></block>\n    </category>\n    <category name=\"리스트\" colour=\"%{BKY_LISTS_HUE}\">\n      <block type=\"lists_create_empty\"></block>\n      <block type=\"lists_create_with\"></block>\n      <block type=\"lists_repeat\">\n        <value name=\"NUM\">\n          <block type=\"math_number\">\n            <field name=\"NUM\">5</field>\n          </block>\n        </value>\n      </block>\n      <block type=\"lists_length\"></block>\n      <block type=\"lists_isEmpty\"></block>\n      <block type=\"lists_indexOf\"></block>\n      <block type=\"lists_getIndex\"></block>\n      <block type=\"lists_setIndex\"></block>\n    </category>\n    <category name=\"문자\" colour=\"%{BKY_TEXTS_HUE}\">\n      <block type=\"text\"></block>\n      <block type=\"text_length\"></block>\n      <block type=\"output\"></block>\n      <block type=\"input\"></block>\n    </category>\n    <sep></sep>\n    <category name=\"변수\" custom=\"VARIABLE\" colour=\"%{BKY_VARIABLES_HUE}\">\n    </category>\n    <category name=\"함수\" custom=\"PROCEDURE\" colour=\"%{BKY_PROCEDURES_HUE}\">\n    </category>\n        </xml>`\n      }\n    }\n  },\n}\n</script>\n\n<style scoped>\n#blockly1 {\n  position: relative;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  z-index: 0;\n}\n</style>\n"]}]}