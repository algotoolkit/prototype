{"remainingRequest":"/Users/quickshell/mit-edu/node_modules/thread-loader/dist/cjs.js!/Users/quickshell/mit-edu/node_modules/babel-loader/lib/index.js!/Users/quickshell/mit-edu/node_modules/eslint-loader/index.js??ref--13-0!/Users/quickshell/mit-edu/src/blocks/input.js","dependencies":[{"path":"/Users/quickshell/mit-edu/src/blocks/input.js","mtime":1622433514229},{"path":"/Users/quickshell/mit-edu/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/quickshell/mit-edu/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/quickshell/mit-edu/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/quickshell/mit-edu/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICogYXMgQmxvY2tseSBmcm9tICdibG9ja2x5L2NvcmUnOwpCbG9ja2x5LkJsb2Nrc1snaW5wdXQnXSA9IHsKICBpbml0OiBmdW5jdGlvbiBpbml0KCkgewogICAgdGhpcy5hcHBlbmREdW1teUlucHV0KCkuYXBwZW5kRmllbGQoIuyeheugpSDrsJvquLAiKTsKICAgIHRoaXMuc2V0T3V0cHV0KHRydWUsIG51bGwpOwogICAgdGhpcy5zZXRDb2xvdXIoMTYwKTsKICAgIHRoaXMuc2V0VG9vbHRpcCgi7Lac66ClIik7CiAgICB0aGlzLnNldEhlbHBVcmwoIiIpOwogIH0KfTsKCkJsb2NrbHkuSmF2YVNjcmlwdFsnaW5wdXQnXSA9IGZ1bmN0aW9uICgpIHsKICB2YXIgY29kZSA9ICJ0LnBvcCgpIjsKICByZXR1cm4gW2NvZGUsIEJsb2NrbHkuSmF2YVNjcmlwdC5PUkRFUl9BVE9NSUNdOwp9Ow=="},{"version":3,"sources":["/Users/quickshell/mit-edu/src/blocks/input.js"],"names":["Blockly","Blocks","init","appendDummyInput","appendField","setOutput","setColour","setTooltip","setHelpUrl","JavaScript","code","ORDER_ATOMIC"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,cAAzB;AAEAA,OAAO,CAACC,MAAR,CAAe,OAAf,IAA0B;AACtBC,EAAAA,IAAI,EAAE,gBAAW;AACf,SAAKC,gBAAL,GACKC,WADL,CACiB,OADjB;AAEA,SAAKC,SAAL,CAAe,IAAf,EAAqB,IAArB;AACA,SAAKC,SAAL,CAAe,GAAf;AACH,SAAKC,UAAL,CAAgB,IAAhB;AACA,SAAKC,UAAL,CAAgB,EAAhB;AACE;AARqB,CAA1B;;AAWAR,OAAO,CAACS,UAAR,CAAmB,OAAnB,IAA8B,YAAW;AACrC,MAAIC,IAAI,GAAG,SAAX;AACA,SAAO,CAACA,IAAD,EAAOV,OAAO,CAACS,UAAR,CAAmBE,YAA1B,CAAP;AACH,CAHD","sourcesContent":["import * as Blockly from 'blockly/core';\n\nBlockly.Blocks['input'] = {\n    init: function() {\n      this.appendDummyInput()\n          .appendField(\"입력 받기\");\n      this.setOutput(true, null);\n      this.setColour(160);\n   this.setTooltip(\"출력\");\n   this.setHelpUrl(\"\");\n    }\n  };\n\nBlockly.JavaScript['input'] = function() {\n    var code = \"t.pop()\";\n    return [code, Blockly.JavaScript.ORDER_ATOMIC];\n}"]}]}