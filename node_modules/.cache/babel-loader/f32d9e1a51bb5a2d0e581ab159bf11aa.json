{"remainingRequest":"/Users/quickshell/mit-edu/node_modules/babel-loader/lib/index.js!/Users/quickshell/mit-edu/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/quickshell/mit-edu/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/quickshell/mit-edu/src/components/BlocklyComponent.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/quickshell/mit-edu/src/components/BlocklyComponent.vue","mtime":1622287044600},{"path":"/Users/quickshell/mit-edu/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/quickshell/mit-edu/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/quickshell/mit-edu/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/quickshell/mit-edu/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8qKgogKiBAbGljZW5zZQogKiAKICogQ29weXJpZ2h0IDIwMTkgR29vZ2xlIExMQwogKgogKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsKICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgogKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKICoKICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKICoKICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQogKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLAogKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4KICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZAogKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4KICovCgovKioKICogQGZpbGVvdmVydmlldyBCbG9ja2x5IFZ1ZSBDb21wb25lbnQuCiAqIEBhdXRob3Igc2FtZWxoQGdvb2dsZS5jb20gKFNhbSBFbC1IdXNzZWluaSkKICovCmltcG9ydCBCbG9ja2x5IGZyb20gJ2Jsb2NrbHknOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0Jsb2NrbHlDb21wb25lbnQnLAogIHByb3BzOiBbJ29wdGlvbnMnXSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgd29ya3NwYWNlOiBudWxsCiAgICB9OwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHZhciBvcHRpb25zID0gdGhpcy4kcHJvcHMub3B0aW9ucyB8fCB7fTsKCiAgICBpZiAoIW9wdGlvbnMudG9vbGJveCkgewogICAgICBvcHRpb25zLnRvb2xib3ggPSB0aGlzLiRyZWZzWyJibG9ja2x5VG9vbGJveCJdOwogICAgfQoKICAgIHRoaXMud29ya3NwYWNlID0gQmxvY2tseS5pbmplY3QodGhpcy4kcmVmc1siYmxvY2tseURpdiJdLCBvcHRpb25zKTsKICB9Cn07"},{"version":3,"sources":["BlocklyComponent.vue"],"names":[],"mappings":";;;;;;;;;;;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAEA,OAAA,OAAA,MAAA,SAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,kBADA;AAEA,EAAA,KAAA,EAAA,CAAA,SAAA,CAFA;AAGA,EAAA,IAHA,kBAGA;AACA,WAAA;AACA,MAAA,SAAA,EAAA;AADA,KAAA;AAGA,GAPA;AAQA,EAAA,OARA,qBAQA;AACA,QAAA,OAAA,GAAA,KAAA,MAAA,CAAA,OAAA,IAAA,EAAA;;AACA,QAAA,CAAA,OAAA,CAAA,OAAA,EAAA;AACA,MAAA,OAAA,CAAA,OAAA,GAAA,KAAA,KAAA,CAAA,gBAAA,CAAA;AACA;;AACA,SAAA,SAAA,GAAA,OAAA,CAAA,MAAA,CAAA,KAAA,KAAA,CAAA,YAAA,CAAA,EAAA,OAAA,CAAA;AACA;AAdA,CAAA","sourcesContent":["<template>\n  <div>\n    <div class=\"blocklyDiv\" ref=\"blocklyDiv\">\n    </div>\n    <xml ref=\"blocklyToolbox\" style=\"display:none\">\n      <slot></slot>\n    </xml>\n  </div>\n</template>\n\n<script>\n/**\n * @license\n * \n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Blockly Vue Component.\n * @author samelh@google.com (Sam El-Husseini)\n */\n\nimport Blockly from 'blockly';\n\nexport default {\n  name: 'BlocklyComponent',\n  props: ['options'],\n  data(){\n    return {\n      workspace: null\n    }\n  },\n  mounted() {\n    var options = this.$props.options || {};\n    if (!options.toolbox) {\n      options.toolbox = this.$refs[\"blocklyToolbox\"];\n    }\n    this.workspace = Blockly.inject(this.$refs[\"blocklyDiv\"], options);\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.blocklyDiv {\n  height: 100%;\n  width: 100%;\n  text-align: left;\n}\n</style>\n"],"sourceRoot":"src/components"}]}