{"remainingRequest":"/Users/quickshell/mit-edu/node_modules/babel-loader/lib/index.js!/Users/quickshell/mit-edu/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/quickshell/mit-edu/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/quickshell/mit-edu/src/views/Statement.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/quickshell/mit-edu/src/views/Statement.vue","mtime":1622545526672},{"path":"/Users/quickshell/mit-edu/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/quickshell/mit-edu/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/quickshell/mit-edu/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/quickshell/mit-edu/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuam9pbiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci5jb25zdHJ1Y3RvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnJlcGxhY2UiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXQiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgQmxvY2tseSBmcm9tICdibG9ja2x5JzsKaW1wb3J0IFZ1ZU1hcmtkb3duIGZyb20gJ3Z1ZS1tYXJrZG93bic7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCBwcm9ibGVtcyBmcm9tICcuLi9hc3NldHMvcHJvYmxlbXMuanNvbic7CmV4cG9ydCBkZWZhdWx0IHsKICBjb2RlOiAiIiwKICBuYW1lOiAiU3RhdGVtZW50IiwKICByZWZzOiBbJ21hcmtkb3duJywgJ21hcmtkb3duX2lucHV0JywgJ21hcmtkb3duX291dHB1dCcsICdwcm9ncmVzcycsICdhbGVydCddLAogIG1ldGhvZHM6IHsKICAgIHN1bWJpdDogZnVuY3Rpb24gc3VtYml0KCkgewogICAgICB0aGlzLiRyZWZzLnByb2dyZXNzLnZhbHVlID0gMDsKICAgICAgdGhpcy5wcm9nID0gMDsKICAgICAgdGhpcy5jb2RlID0gQmxvY2tseS5KYXZhU2NyaXB0LndvcmtzcGFjZVRvQ29kZSh0aGlzLiRyZWZzWyJibG9jayJdKTsKCiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5pbmRleC5zaXplOyBpKyspIHsKICAgICAgICB2YXIgcyA9IFtdOwogICAgICAgIHZhciB0ID0gdGhpcy5pbnB1dHNbaV0ucmVwbGFjZSgiXG4iLCAiICIpLnNwbGl0KCIgIik7CiAgICAgICAgdC5yZXZlcnNlKCk7CiAgICAgICAgZXZhbCh0aGlzLmNvZGUpOwogICAgICAgIHQubGVuZ3RoOwoKICAgICAgICBpZiAocy5qb2luKCJcbiIpID09IHRoaXMub3V0cHV0c1tpXSkgewogICAgICAgICAgdGhpcy5wcm9nICs9IHRoaXMucG9pbnQgLyB0aGlzLmluZGV4LnNpemU7CiAgICAgICAgICB0aGlzLiRyZWZzLnByb2dyZXNzLnZhbHVlICs9IDEwMCAvIHRoaXMuaW5kZXguc2l6ZTsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIHRoaXMuc2hvd19zdWNjZXNzX2FsZXJ0ID0gZmFsc2U7CiAgICAgIHRoaXMuc2hvd193YXJuaW5nX2FsZXJ0ID0gZmFsc2U7CiAgICAgIHRoaXMuc2hvd19lcnJvcl9hbGVydCA9IGZhbHNlOwoKICAgICAgaWYgKHRoaXMucHJvZyA9PSB0aGlzLnBvaW50KSB7CiAgICAgICAgdGhpcy5zaG93X3N1Y2Nlc3NfYWxlcnQgPSB0cnVlOwogICAgICB9IGVsc2UgaWYgKHRoaXMucHJvZyAhPSAwKSB7CiAgICAgICAgdGhpcy5zaG93X3dhcm5pbmdfYWxlcnQgPSB0cnVlOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuc2hvd19lcnJvcl9hbGVydCA9IHRydWU7CiAgICAgIH0KCiAgICAgIHZhciBsMSA9IEpTT04ucGFyc2UodGhpcy5zdG9yYWdlLmdldEl0ZW0oJ2lzX2FjY2VwdGVkJykpOwogICAgICB0aGlzLnN0b3JhZ2Uuc2V0SXRlbSgnc2NvcmUnLCBTdHJpbmcoTnVtYmVyKHRoaXMuc3RvcmFnZS5nZXRJdGVtKCdzY29yZScpKSAtIGwxW3RoaXMuaWRdKSk7CiAgICAgIGwxW3RoaXMuaWRdID0gdGhpcy5wcm9nOwogICAgICB0aGlzLnN0b3JhZ2Uuc2V0SXRlbSgnaXNfYWNjZXB0ZWQnLCBKU09OLnN0cmluZ2lmeShsMSkpOwogICAgICB0aGlzLnN0b3JhZ2Uuc2V0SXRlbSgnc2NvcmUnLCBTdHJpbmcoTnVtYmVyKHRoaXMuc3RvcmFnZS5nZXRJdGVtKCdzY29yZScpKSArIHRoaXMucHJvZykpOwogICAgfSwKICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKGlkKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB0aGlzLmlucHV0cyA9IFtdOwogICAgICB0aGlzLm91dHB1dHMgPSBbXTsKICAgICAgdGhpcy50aXRsZSA9IHByb2JsZW1zLnByb2JsZW1zW2lkXS50aXRsZTsKICAgICAgdGhpcy5wb2ludCA9IHByb2JsZW1zLnByb2JsZW1zW2lkXS5wb2ludDsKICAgICAgdGhpcy5zaG93X3N1Y2Nlc3NfYWxlcnQgPSBmYWxzZTsKICAgICAgdGhpcy5zaG93X3dhcm5pbmdfYWxlcnQgPSBmYWxzZTsKICAgICAgdGhpcy5zaG93X2Vycm9yX2FsZXJ0ID0gZmFsc2U7CiAgICAgIHRoaXMuaWQgPSBpZDsKICAgICAgdmFyIGwxID0gSlNPTi5wYXJzZSh0aGlzLnN0b3JhZ2UuZ2V0SXRlbSgnaXNfYWNjZXB0ZWQnKSk7CiAgICAgIHRoaXMucHJvZyA9IGwxW3RoaXMuaWRdOwogICAgICB0aGlzLiRyZWZzLnByb2dyZXNzLnZhbHVlID0gMTAwICogKHRoaXMucHJvZyAvIHRoaXMucG9pbnQpOwogICAgICBheGlvcy5nZXQoIi9zdGF0ZW1lbnQvIi5jb25jYXQoaWQsICIubWQiKSwgewogICAgICAgIGJhc2VVUkw6IHdpbmRvdy5sb2NhdGlvbi5vcmlnaW4KICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBfdGhpcy5zdGF0ZW1lbnQgPSByZXNwb25zZS5kYXRhOwogICAgICAgIF90aGlzLiRyZWZzWydtYXJrZG93biddLnNvdXJjZURhdGEgPSByZXNwb25zZS5kYXRhOwogICAgICB9KTsKICAgICAgYXhpb3MuZ2V0KCIvaW5wdXQvIi5jb25jYXQoaWQsICIubWQiKSwgewogICAgICAgIGJhc2VVUkw6IHdpbmRvdy5sb2NhdGlvbi5vcmlnaW4KICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBfdGhpcy5pbnB1dCA9IHJlc3BvbnNlLmRhdGE7CiAgICAgICAgX3RoaXMuJHJlZnNbJ21hcmtkb3duX2lucHV0J10uc291cmNlRGF0YSA9IHJlc3BvbnNlLmRhdGE7CiAgICAgIH0pOwogICAgICBheGlvcy5nZXQoIi9vdXRwdXQvIi5jb25jYXQoaWQsICIubWQiKSwgewogICAgICAgIGJhc2VVUkw6IHdpbmRvdy5sb2NhdGlvbi5vcmlnaW4KICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBfdGhpcy5vdXRwdXQgPSByZXNwb25zZS5kYXRhOwogICAgICAgIF90aGlzLiRyZWZzWydtYXJrZG93bl9vdXRwdXQnXS5zb3VyY2VEYXRhID0gcmVzcG9uc2UuZGF0YTsKICAgICAgfSk7CiAgICAgIGF4aW9zLmdldCgiL2RhdGEvIi5jb25jYXQoaWQsICIvaW5kZXguanNvbiIpLCB7CiAgICAgICAgYmFzZVVSTDogd2luZG93LmxvY2F0aW9uLm9yaWdpbgogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIF90aGlzLmluZGV4ID0gcmVzcG9uc2UuZGF0YTsKCiAgICAgICAgZm9yICh2YXIgaSA9IDE7IGkgPD0gX3RoaXMuaW5kZXguc2l6ZTsgaSsrKSB7CiAgICAgICAgICBheGlvcy5nZXQoIi9kYXRhLyIuY29uY2F0KGlkLCAiL2lucHV0LyIpLmNvbmNhdChpLCAiLmluIiksIHsKICAgICAgICAgICAgYmFzZVVSTDogd2luZG93LmxvY2F0aW9uLm9yaWdpbgogICAgICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICAgICAgX3RoaXMuaW5wdXRzLnB1c2goU3RyaW5nKHJlc3BvbnNlLmRhdGEpKTsKICAgICAgICAgIH0pOwogICAgICAgICAgYXhpb3MuZ2V0KCIvZGF0YS8iLmNvbmNhdChpZCwgIi9vdXRwdXQvIikuY29uY2F0KGksICIub3V0IiksIHsKICAgICAgICAgICAgYmFzZVVSTDogd2luZG93LmxvY2F0aW9uLm9yaWdpbgogICAgICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICAgICAgX3RoaXMub3V0cHV0cy5wdXNoKFN0cmluZyhyZXNwb25zZS5kYXRhKSk7CiAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfQogIH0sCiAgY29tcG9uZW50czogewogICAgVnVlTWFya2Rvd246IFZ1ZU1hcmtkb3duCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgaWQ6IDAsCiAgICAgIHN0b3JhZ2U6IGxvY2FsU3RvcmFnZSwKICAgICAgcHJvZzogMCwKICAgICAgaW5kZXg6IHt9LAogICAgICBpbnB1dHM6IFtdLAogICAgICBvdXRwdXRzOiBbXSwKICAgICAgc3RhdGVtZW50OiAiIiwKICAgICAgaW5wdXQ6ICIiLAogICAgICBvdXRwdXQ6ICIiLAogICAgICB0aXRsZTogIiIsCiAgICAgIHNob3dfc3VjY2Vzc19hbGVydDogZmFsc2UsCiAgICAgIHNob3dfd2FybmluZ19hbGVydDogZmFsc2UsCiAgICAgIHNob3dfZXJyb3JfYWxlcnQ6IGZhbHNlLAogICAgICBwb2ludDogMAogICAgfTsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLnVwZGF0ZSh0aGlzLmlkKTsKICB9Cn07"},{"version":3,"sources":["Statement.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <v-container>\n        <v-alert dense type=\"success\" v-show=\"show_success_alert\"> 맞았습니다! </v-alert>\n        <v-alert dense type=\"error\" v-show=\"show_error_alert\"> 틀렸습니다. </v-alert>\n        <v-alert dense type=\"warning\" v-show=\"show_warning_alert\"> 부분점수: {{ prog }} / {{ point }} </v-alert>\n        <v-row no-gutters>\n        <v-card width=\"100%\" color=\"primary\" dark>\n            <v-row no-gutters>\n                <v-card-title>{{ `${this.title} (${this.point}pt)` }}</v-card-title>\n                <v-spacer/>\n                <v-card-actions>\n                <v-btn text @click=\"sumbit\">\n                    <v-icon>\n                        mdi-play\n                    </v-icon>\n                    Run\n                </v-btn>\n            </v-card-actions>\n            </v-row>\n        </v-card>\n        </v-row>\n        <v-row no-gutters>\n            <v-progress-linear\n                color=\"light-blue\"\n                height=\"25\"\n                striped\n                ref=\"progress\"\n            >\n                <span>{{ prog }} / {{ point }}</span>\n            </v-progress-linear>\n        </v-row>\n        <v-row no-gutters>\n        <v-card\n            width=\"100%\"\n        >\n            <v-list>\n                <v-subheader>문제</v-subheader>\n                <v-container class=\"body-1\">\n                    <vue-markdown ref=\"markdown\">\n                        {{ this.statement }}\n                    </vue-markdown>\n                </v-container>\n                <v-subheader>입력</v-subheader>\n                <v-container class=\"body-1\">\n                    <vue-markdown ref=\"markdown_input\">\n                        {{ this.input }}\n                    </vue-markdown>\n                </v-container>\n                <v-subheader>출력</v-subheader>\n                <v-container class=\"body-1\">\n                    <vue-markdown ref=\"markdown_output\">\n                        {{ this.output }}\n                    </vue-markdown>\n                </v-container>\n                \n            </v-list>\n        </v-card>\n        </v-row>\n    </v-container>\n</template>\n\n<script>\nimport Blockly from 'blockly';\nimport VueMarkdown from 'vue-markdown';\nimport axios from 'axios';\nimport problems from '../assets/problems.json';\n\nexport default {\n    code: \"\",\n    name: \"Statement\",\n    refs: ['markdown', 'markdown_input', 'markdown_output', 'progress', 'alert'],\n    methods: {\n        sumbit: function() {\n            this.$refs.progress.value = 0;\n            this.prog = 0;\n            this.code = Blockly.JavaScript.workspaceToCode(this.$refs[\"block\"]);\n            for (var i = 0; i < this.index.size; i++) {\n                var s = [];\n                var t = this.inputs[i].replace(\"\\n\", \" \").split(\" \");\n                t.reverse();\n                eval(this.code);\n                t.length;\n                if (s.join(\"\\n\") == this.outputs[i]) {\n                    this.prog += this.point/this.index.size;\n                    this.$refs.progress.value += 100/this.index.size;\n                }\n            }\n            this.show_success_alert = false;\n            this.show_warning_alert = false;\n            this.show_error_alert = false;\n            if (this.prog == this.point) {\n                this.show_success_alert = true;\n            } else if (this.prog != 0) {\n                this.show_warning_alert = true;\n            } else {\n                this.show_error_alert = true;\n            }\n            var l1 = JSON.parse(this.storage.getItem('is_accepted'));\n            this.storage.setItem('score', String(Number(this.storage.getItem('score')) - l1[this.id]));\n            l1[this.id] = this.prog;\n            this.storage.setItem('is_accepted', JSON.stringify(l1));\n            this.storage.setItem('score', String(Number(this.storage.getItem('score')) + this.prog));\n        },\n        update: function(id) {\n            this.inputs = [];\n            this.outputs = [];\n            this.title = problems.problems[id].title;\n            this.point = problems.problems[id].point;\n            this.show_success_alert = false;\n            this.show_warning_alert = false;\n            this.show_error_alert = false;\n            this.id = id;\n            var l1 = JSON.parse(this.storage.getItem('is_accepted'));\n            this.prog = l1[this.id];\n            this.$refs.progress.value = 100 * (this.prog / this.point);\n        axios.get(\n        `/statement/${id}.md`,\n        { baseURL: window.location.origin }).then(response => { this.statement = response.data; this.$refs['markdown'].sourceData = response.data; });\n        axios.get(\n        `/input/${id}.md`,\n        { baseURL: window.location.origin }).then(response => { this.input = response.data; this.$refs['markdown_input'].sourceData = response.data; });\n        axios.get(\n        `/output/${id}.md`,\n        { baseURL: window.location.origin }).then(response => { this.output = response.data; this.$refs['markdown_output'].sourceData = response.data; });\n        axios.get(\n        `/data/${id}/index.json`,\n        { baseURL: window.location.origin }).then(response => { \n            this.index = response.data;\n            for (var i = 1; i <= this.index.size; i++) {\n                axios.get(\n                `/data/${id}/input/${i}.in`,\n                { baseURL: window.location.origin }).then(response => { this.inputs.push(String(response.data)); });\n                axios.get(\n                `/data/${id}/output/${i}.out`,\n                { baseURL: window.location.origin }).then(response => { this.outputs.push(String(response.data)); });\n            }\n        })\n        }\n    },\n    components: {\n        VueMarkdown,\n    },\n    data: () => ({\n        id: 0,\n        storage: localStorage,\n        prog: 0,\n        index: {},\n        inputs: [],\n        outputs: [],\n        statement: \"\",\n        input: \"\",\n        output: \"\",\n        title: \"\",\n        show_success_alert: false,\n        show_warning_alert: false,\n        show_error_alert: false,\n        point: 0,\n    }),\n    mounted() {\n        this.update(this.id);\n    },\n}\n</script>\n\n<style>\n\n</style>"],"sourceRoot":"src/views"}]}